% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sanity_checks.R
\name{edc_data_warn}
\alias{edc_data_warn}
\alias{edc_data_stop}
\alias{edc_data_warnings}
\alias{assert_no_rows}
\title{Standardized warning system}
\usage{
edc_data_warn(
  df,
  message,
  ...,
  issue_n = NULL,
  max_subjid = 5,
  col_subjid = get_subjid_cols()
)

edc_data_stop(...) #same arguments

edc_data_warnings()
}
\arguments{
\item{df}{the filtered dataframe}

\item{message}{the message. Can use {cli} formats.}

\item{...}{unused}

\item{issue_n}{(optional) identifying row number}

\item{max_subjid}{max number of subject ID to show in the message}

\item{col_subjid}{column name for subject ID. Set to \code{NULL} to ignore.}
}
\value{
\code{df} invisibly
}
\description{
When checking your data, filter your dataset to get only problematic rows. \cr
Then, use either:
\itemize{
\item \code{edc_data_warn()} to generate a standardized warning that can be forwarded to the datamanager
\item \code{edc_data_warn()} to abort the script if the problem is too serious
}

Database issues should be traced in a separate table file, with an identifying row number.
Use \code{edc_data_warnings()} to generate such a file.
}
\examples{
library(dplyr)
tm = edc_example()
load_list(tm)
db0 \%>\% 
  filter(age>70) \%>\% 
  edc_data_warn("Age should not be >70", issue_n=1)

db0 \%>\% 
  filter(age<25) \%>\% 
  edc_data_warn("Age should not be <25", issue_n=2)

db1 \%>\% 
  filter(n()>1, .by=SUBJID) \%>\% 
  edc_data_warn("There are duplicated patients in `db1`", issue_n=3)

edc_data_warnings()

\dontrun{
db0 \%>\% 
  filter(age<25) \%>\% 
  edc_data_warn("Age should *really* not be <25")
}
}
