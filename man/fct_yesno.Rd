% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers.R
\name{fct_yesno}
\alias{fct_yesno}
\alias{get_yesno_lvl}
\title{Format factor levels as Yes/No}
\usage{
fct_yesno(
  x,
  lvl = getOption("edc_fct_yesno", get_yesno_lvl()),
  mutate_character = TRUE
)

get_yesno_lvl(add, keep_default = TRUE)
}
\arguments{
\item{x}{a vector of any type/class}

\item{lvl}{list of values to be considered as Yes/No values. See example.}

\item{mutate_character}{whether to turn characters into factor}
}
\value{
a factor, or \code{x} untouched
}
\description{
Format factor levels as arbitrary values of Yes/No (with Yes always first) while leaving untouched all vectors that contain other information.
Default level values can be set through options, which is best done before calling \link{read_trialmaster}.
Helper \code{get_yesno_lvl()} is a helper to provide default TM levels.
}
\examples{
set.seed(42)
x = tibble(a=sample(c("Yes", "No"), size=20, replace=T),
           b=sample(c("1-Yes", "0-No"), size=20, replace=T),
           c=sample(c("Oui", "Non"), size=20, replace=T),
           x=sample(0:1, size=20, replace=T),
           y=1:20)

# leave untouched unhandled vectors (c,x, and y)
x \%>\% purrr::iwalk(~{
  cat("--- Levels of ", .y, " ---\n")
  print(.x \%>\% factor() \%>\% levels())
  print(.x \%>\% fct_yesno() \%>\% levels())
})

#add other levels
supp_levels = list(c("Oui", "Non"), c("Ja", "Nein"))
options(edc_fct_yesno = get_yesno_lvl(supp_levels))
x \%>\% purrr::iwalk(~{
  cat("--- Levels of ", .y, " ---\n")
  print(.x \%>\% factor() \%>\% levels())
  print(.x \%>\% fct_yesno() \%>\% levels())
})
}
