---
title: Adverse Events
description: > 
  Learn how to make AE tables.
vignette: >
  %\VignetteIndexEntry{Adverse Events}
  %\VignetteEngine{quarto::html}
  %\VignetteEncoding{UTF-8}
knitr:
  opts_chunk: 
    collapse: true
    comment: '#>'
---

<script src="https://cdn.jsdelivr.net/npm/@xiee/utils/js/tabsets.min.js" defer data-external="1"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@xiee/utils/css/tabsets.min.css">

On commence par charger la base TrialMaster comme on fait d'habitude. 
Ici j'utilise la fonction `edc_example_ae()` pour ne pas dépendre de données réelles privées.

```{r}
#| label = "setup",
#| message = FALSE,
#| warning = FALSE
library(EDCimport)
library(flextable)
# tm = read_trialmaster("path/to/file.zip")
tm = edc_example_ae()
load_list(tm)

head(ae)
head(enrolres)
```

## Macro `AE_grades`

La macro `AE_grades` est traduite en deux fonctions : `ae_table_grade_max()` et `ae_table_grade_n()`. Ces fonctions retournent des objets de classe `crosstable`. 
Ils ont une méthode `as_flextable` qui les transforme en table HTML de classe `flextable`. 

EDCimport comprend aussi la fonction `ae_plot_grade_max()`

Voir la description du package `{crosstable}` pour plus d'informations: [documentation](https://danchaltiel.github.io/crosstable/reference/as_flextable.html). <br>
Voir la description du package `{flextable}` pour la liste des modificateurs (comme `add_footer_lines()`) : [documentation](https://davidgohel.github.io/flextable/reference/index.html).

### Tableaux

::: {.panel-tabset}

#### `AE_grades1`

Table des grades maximum par patient

```{r}
head(iris)
```

#### `AE_grades2`

Table des grades maximum par patient stratifié sur le bras

On pourrait retrouver exactement la sortie SAS en mettant `total=FALSE`.

```{r}
head(mtcars)
```

:::